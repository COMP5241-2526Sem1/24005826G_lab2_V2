"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/genai/translate/route";
exports.ids = ["app/api/genai/translate/route"];
exports.modules = {

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenai%2Ftranslate%2Froute&page=%2Fapi%2Fgenai%2Ftranslate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenai%2Ftranslate%2Froute.ts&appDir=%2Fworkspaces%2F24005826G_lab2_V2%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2F24005826G_lab2_V2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenai%2Ftranslate%2Froute&page=%2Fapi%2Fgenai%2Ftranslate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenai%2Ftranslate%2Froute.ts&appDir=%2Fworkspaces%2F24005826G_lab2_V2%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2F24005826G_lab2_V2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _workspaces_24005826G_lab2_V2_src_app_api_genai_translate_route_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./src/app/api/genai/translate/route.ts */ \"(rsc)/./src/app/api/genai/translate/route.ts\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/genai/translate/route\",\n        pathname: \"/api/genai/translate\",\n        filename: \"route\",\n        bundlePath: \"app/api/genai/translate/route\"\n    },\n    resolvedPagePath: \"/workspaces/24005826G_lab2_V2/src/app/api/genai/translate/route.ts\",\n    nextConfigOutput,\n    userland: _workspaces_24005826G_lab2_V2_src_app_api_genai_translate_route_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/genai/translate/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZnZW5haSUyRnRyYW5zbGF0ZSUyRnJvdXRlJnBhZ2U9JTJGYXBpJTJGZ2VuYWklMkZ0cmFuc2xhdGUlMkZyb3V0ZSZhcHBQYXRocz0mcGFnZVBhdGg9cHJpdmF0ZS1uZXh0LWFwcC1kaXIlMkZhcGklMkZnZW5haSUyRnRyYW5zbGF0ZSUyRnJvdXRlLnRzJmFwcERpcj0lMkZ3b3Jrc3BhY2VzJTJGMjQwMDU4MjZHX2xhYjJfVjIlMkZzcmMlMkZhcHAmcGFnZUV4dGVuc2lvbnM9dHN4JnBhZ2VFeHRlbnNpb25zPXRzJnBhZ2VFeHRlbnNpb25zPWpzeCZwYWdlRXh0ZW5zaW9ucz1qcyZyb290RGlyPSUyRndvcmtzcGFjZXMlMkYyNDAwNTgyNkdfbGFiMl9WMiZpc0Rldj10cnVlJnRzY29uZmlnUGF0aD10c2NvbmZpZy5qc29uJmJhc2VQYXRoPSZhc3NldFByZWZpeD0mbmV4dENvbmZpZ091dHB1dD0mcHJlZmVycmVkUmVnaW9uPSZtaWRkbGV3YXJlQ29uZmlnPWUzMCUzRCEiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXNHO0FBQ3ZDO0FBQ2M7QUFDa0I7QUFDL0Y7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCLGdIQUFtQjtBQUMzQztBQUNBLGNBQWMseUVBQVM7QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBLFlBQVk7QUFDWixDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsUUFBUSxpRUFBaUU7QUFDekU7QUFDQTtBQUNBLFdBQVcsNEVBQVc7QUFDdEI7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUN1SDs7QUFFdkgiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9ub3RlbHktc3VwYWJhc2UtbmV4dC8/YWM4MiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCB7IHBhdGNoRmV0Y2ggYXMgX3BhdGNoRmV0Y2ggfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9saWIvcGF0Y2gtZmV0Y2hcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvd29ya3NwYWNlcy8yNDAwNTgyNkdfbGFiMl9WMi9zcmMvYXBwL2FwaS9nZW5haS90cmFuc2xhdGUvcm91dGUudHNcIjtcbi8vIFdlIGluamVjdCB0aGUgbmV4dENvbmZpZ091dHB1dCBoZXJlIHNvIHRoYXQgd2UgY2FuIHVzZSB0aGVtIGluIHRoZSByb3V0ZVxuLy8gbW9kdWxlLlxuY29uc3QgbmV4dENvbmZpZ091dHB1dCA9IFwiXCJcbmNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IEFwcFJvdXRlUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLkFQUF9ST1VURSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2dlbmFpL3RyYW5zbGF0ZS9yb3V0ZVwiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2dlbmFpL3RyYW5zbGF0ZVwiLFxuICAgICAgICBmaWxlbmFtZTogXCJyb3V0ZVwiLFxuICAgICAgICBidW5kbGVQYXRoOiBcImFwcC9hcGkvZ2VuYWkvdHJhbnNsYXRlL3JvdXRlXCJcbiAgICB9LFxuICAgIHJlc29sdmVkUGFnZVBhdGg6IFwiL3dvcmtzcGFjZXMvMjQwMDU4MjZHX2xhYjJfVjIvc3JjL2FwcC9hcGkvZ2VuYWkvdHJhbnNsYXRlL3JvdXRlLnRzXCIsXG4gICAgbmV4dENvbmZpZ091dHB1dCxcbiAgICB1c2VybGFuZFxufSk7XG4vLyBQdWxsIG91dCB0aGUgZXhwb3J0cyB0aGF0IHdlIG5lZWQgdG8gZXhwb3NlIGZyb20gdGhlIG1vZHVsZS4gVGhpcyBzaG91bGRcbi8vIGJlIGVsaW1pbmF0ZWQgd2hlbiB3ZSd2ZSBtb3ZlZCB0aGUgb3RoZXIgcm91dGVzIHRvIHRoZSBuZXcgZm9ybWF0LiBUaGVzZVxuLy8gYXJlIHVzZWQgdG8gaG9vayBpbnRvIHRoZSByb3V0ZS5cbmNvbnN0IHsgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9nZW5haS90cmFuc2xhdGUvcm91dGVcIjtcbmZ1bmN0aW9uIHBhdGNoRmV0Y2goKSB7XG4gICAgcmV0dXJuIF9wYXRjaEZldGNoKHtcbiAgICAgICAgc2VydmVySG9va3MsXG4gICAgICAgIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2VcbiAgICB9KTtcbn1cbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgb3JpZ2luYWxQYXRobmFtZSwgcGF0Y2hGZXRjaCwgIH07XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwcC1yb3V0ZS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenai%2Ftranslate%2Froute&page=%2Fapi%2Fgenai%2Ftranslate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenai%2Ftranslate%2Froute.ts&appDir=%2Fworkspaces%2F24005826G_lab2_V2%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2F24005826G_lab2_V2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./src/app/api/genai/translate/route.ts":
/*!**********************************************!*\
  !*** ./src/app/api/genai/translate/route.ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_translationService__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/translationService */ \"(rsc)/./src/lib/translationService.ts\");\n\n\nasync function POST(req) {\n    try {\n        const payload = await req.json().catch(()=>({}));\n        const text = typeof payload.text === \"string\" ? payload.text : \"\";\n        const targetLanguage = typeof payload.targetLanguage === \"string\" ? payload.targetLanguage : \"\";\n        if (!text.trim()) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Text is required for translation.\"\n            }, {\n                status: 400\n            });\n        }\n        if (!targetLanguage.trim()) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Target language is required for translation.\"\n            }, {\n                status: 400\n            });\n        }\n        const translated = await (0,_lib_translationService__WEBPACK_IMPORTED_MODULE_1__.translateText)(text, targetLanguage);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            translated\n        });\n    } catch (e) {\n        console.error(\"Translation error:\", e);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: e?.message || \"Failed to translate text\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9zcmMvYXBwL2FwaS9nZW5haS90cmFuc2xhdGUvcm91dGUudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTBDO0FBQ2M7QUFFakQsZUFBZUUsS0FBS0MsR0FBWTtJQUNyQyxJQUFJO1FBQ0YsTUFBTUMsVUFBVSxNQUFNRCxJQUFJRSxJQUFJLEdBQUdDLEtBQUssQ0FBQyxJQUFPLEVBQUM7UUFDL0MsTUFBTUMsT0FBTyxPQUFPSCxRQUFRRyxJQUFJLEtBQUssV0FBV0gsUUFBUUcsSUFBSSxHQUFHO1FBQy9ELE1BQU1DLGlCQUFpQixPQUFPSixRQUFRSSxjQUFjLEtBQUssV0FBV0osUUFBUUksY0FBYyxHQUFHO1FBRTdGLElBQUksQ0FBQ0QsS0FBS0UsSUFBSSxJQUFJO1lBQ2hCLE9BQU9ULHFEQUFZQSxDQUFDSyxJQUFJLENBQUM7Z0JBQUVLLE9BQU87WUFBb0MsR0FBRztnQkFBRUMsUUFBUTtZQUFJO1FBQ3pGO1FBQ0EsSUFBSSxDQUFDSCxlQUFlQyxJQUFJLElBQUk7WUFDMUIsT0FBT1QscURBQVlBLENBQUNLLElBQUksQ0FBQztnQkFBRUssT0FBTztZQUErQyxHQUFHO2dCQUFFQyxRQUFRO1lBQUk7UUFDcEc7UUFFQSxNQUFNQyxhQUFhLE1BQU1YLHNFQUFhQSxDQUFDTSxNQUFNQztRQUM3QyxPQUFPUixxREFBWUEsQ0FBQ0ssSUFBSSxDQUFDO1lBQUVPO1FBQVc7SUFDeEMsRUFBRSxPQUFPQyxHQUFRO1FBQ2ZDLFFBQVFKLEtBQUssQ0FBQyxzQkFBc0JHO1FBQ3BDLE9BQU9iLHFEQUFZQSxDQUFDSyxJQUFJLENBQUM7WUFDdkJLLE9BQU9HLEdBQUdFLFdBQVc7UUFDdkIsR0FBRztZQUFFSixRQUFRO1FBQUk7SUFDbkI7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL25vdGVseS1zdXBhYmFzZS1uZXh0Ly4vc3JjL2FwcC9hcGkvZ2VuYWkvdHJhbnNsYXRlL3JvdXRlLnRzPzQyMzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmV4dFJlc3BvbnNlIH0gZnJvbSAnbmV4dC9zZXJ2ZXInXG5pbXBvcnQgeyB0cmFuc2xhdGVUZXh0IH0gZnJvbSAnQC9saWIvdHJhbnNsYXRpb25TZXJ2aWNlJ1xuXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUE9TVChyZXE6IFJlcXVlc3QpIHtcbiAgdHJ5IHtcbiAgICBjb25zdCBwYXlsb2FkID0gYXdhaXQgcmVxLmpzb24oKS5jYXRjaCgoKSA9PiAoe30pKSBhcyBhbnlcbiAgICBjb25zdCB0ZXh0ID0gdHlwZW9mIHBheWxvYWQudGV4dCA9PT0gJ3N0cmluZycgPyBwYXlsb2FkLnRleHQgOiAnJ1xuICAgIGNvbnN0IHRhcmdldExhbmd1YWdlID0gdHlwZW9mIHBheWxvYWQudGFyZ2V0TGFuZ3VhZ2UgPT09ICdzdHJpbmcnID8gcGF5bG9hZC50YXJnZXRMYW5ndWFnZSA6ICcnXG4gICAgXG4gICAgaWYgKCF0ZXh0LnRyaW0oKSkge1xuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgZXJyb3I6ICdUZXh0IGlzIHJlcXVpcmVkIGZvciB0cmFuc2xhdGlvbi4nIH0sIHsgc3RhdHVzOiA0MDAgfSlcbiAgICB9XG4gICAgaWYgKCF0YXJnZXRMYW5ndWFnZS50cmltKCkpIHtcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IGVycm9yOiAnVGFyZ2V0IGxhbmd1YWdlIGlzIHJlcXVpcmVkIGZvciB0cmFuc2xhdGlvbi4nIH0sIHsgc3RhdHVzOiA0MDAgfSlcbiAgICB9XG4gICAgXG4gICAgY29uc3QgdHJhbnNsYXRlZCA9IGF3YWl0IHRyYW5zbGF0ZVRleHQodGV4dCwgdGFyZ2V0TGFuZ3VhZ2UpXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHsgdHJhbnNsYXRlZCB9KVxuICB9IGNhdGNoIChlOiBhbnkpIHtcbiAgICBjb25zb2xlLmVycm9yKCdUcmFuc2xhdGlvbiBlcnJvcjonLCBlKVxuICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbih7IFxuICAgICAgZXJyb3I6IGU/Lm1lc3NhZ2UgfHwgJ0ZhaWxlZCB0byB0cmFuc2xhdGUgdGV4dCcgXG4gICAgfSwgeyBzdGF0dXM6IDUwMCB9KVxuICB9XG59XG4iXSwibmFtZXMiOlsiTmV4dFJlc3BvbnNlIiwidHJhbnNsYXRlVGV4dCIsIlBPU1QiLCJyZXEiLCJwYXlsb2FkIiwianNvbiIsImNhdGNoIiwidGV4dCIsInRhcmdldExhbmd1YWdlIiwidHJpbSIsImVycm9yIiwic3RhdHVzIiwidHJhbnNsYXRlZCIsImUiLCJjb25zb2xlIiwibWVzc2FnZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./src/app/api/genai/translate/route.ts\n");

/***/ }),

/***/ "(rsc)/./src/lib/translationService.ts":
/*!***************************************!*\
  !*** ./src/lib/translationService.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   translateText: () => (/* binding */ translateText)\n/* harmony export */ });\n// Translation service with multiple providers and fallbacks\n// Simple dictionary-based translations for common words/phrases\nconst translations = {\n    \"hello\": {\n        \"Chinese\": \"你好\",\n        \"Spanish\": \"Hola\",\n        \"French\": \"Bonjour\",\n        \"German\": \"Hallo\",\n        \"Italian\": \"Ciao\",\n        \"Portuguese\": \"Ol\\xe1\",\n        \"Japanese\": \"こんにちは\",\n        \"Korean\": \"안녕하세요\",\n        \"Russian\": \"Привет\",\n        \"Arabic\": \"مرحبا\"\n    },\n    \"hello world\": {\n        \"Chinese\": \"你好世界\",\n        \"Spanish\": \"Hola mundo\",\n        \"French\": \"Bonjour le monde\",\n        \"German\": \"Hallo Welt\",\n        \"Italian\": \"Ciao mondo\",\n        \"Portuguese\": \"Ol\\xe1 mundo\",\n        \"Japanese\": \"こんにちは世界\",\n        \"Korean\": \"안녕하세요 세계\",\n        \"Russian\": \"Привет мир\",\n        \"Arabic\": \"مرحبا بالعالم\"\n    },\n    \"thank you\": {\n        \"Chinese\": \"谢谢\",\n        \"Spanish\": \"Gracias\",\n        \"French\": \"Merci\",\n        \"German\": \"Danke\",\n        \"Italian\": \"Grazie\",\n        \"Portuguese\": \"Obrigado\",\n        \"Japanese\": \"ありがとう\",\n        \"Korean\": \"감사합니다\",\n        \"Russian\": \"Спасибо\",\n        \"Arabic\": \"شكرا\"\n    },\n    \"good morning\": {\n        \"Chinese\": \"早上好\",\n        \"Spanish\": \"Buenos d\\xedas\",\n        \"French\": \"Bonjour\",\n        \"German\": \"Guten Morgen\",\n        \"Italian\": \"Buongiorno\",\n        \"Portuguese\": \"Bom dia\",\n        \"Japanese\": \"おはよう\",\n        \"Korean\": \"좋은 아침\",\n        \"Russian\": \"Доброе утро\",\n        \"Arabic\": \"صباح الخير\"\n    },\n    \"yes\": {\n        \"Chinese\": \"是\",\n        \"Spanish\": \"S\\xed\",\n        \"French\": \"Oui\",\n        \"German\": \"Ja\",\n        \"Italian\": \"S\\xec\",\n        \"Portuguese\": \"Sim\",\n        \"Japanese\": \"はい\",\n        \"Korean\": \"네\",\n        \"Russian\": \"Да\",\n        \"Arabic\": \"نعم\"\n    },\n    \"no\": {\n        \"Chinese\": \"不\",\n        \"Spanish\": \"No\",\n        \"French\": \"Non\",\n        \"German\": \"Nein\",\n        \"Italian\": \"No\",\n        \"Portuguese\": \"N\\xe3o\",\n        \"Japanese\": \"いいえ\",\n        \"Korean\": \"아니요\",\n        \"Russian\": \"Нет\",\n        \"Arabic\": \"لا\"\n    }\n};\n// Try dictionary-based translation first\nfunction tryDictionaryTranslation(text, targetLanguage) {\n    const normalizedText = text.toLowerCase().trim();\n    // Direct match\n    if (translations[normalizedText] && translations[normalizedText][targetLanguage]) {\n        return translations[normalizedText][targetLanguage];\n    }\n    // Try to find partial matches for simple phrases\n    for (const [key, langMap] of Object.entries(translations)){\n        if (normalizedText.includes(key) && langMap[targetLanguage]) {\n            // For simple replacements\n            if (normalizedText === key) {\n                return langMap[targetLanguage];\n            }\n        }\n    }\n    return null;\n}\n// LibreTranslate API (free, open-source translation service)\nasync function tryLibreTranslate(text, targetLanguage) {\n    try {\n        // Map our language names to LibreTranslate language codes\n        const languageMap = {\n            \"Chinese\": \"zh\",\n            \"Spanish\": \"es\",\n            \"French\": \"fr\",\n            \"German\": \"de\",\n            \"Italian\": \"it\",\n            \"Portuguese\": \"pt\",\n            \"Japanese\": \"ja\",\n            \"Korean\": \"ko\",\n            \"Russian\": \"ru\",\n            \"Arabic\": \"ar\"\n        };\n        const targetCode = languageMap[targetLanguage] || targetLanguage.toLowerCase();\n        console.log(`Trying LibreTranslate translation to ${targetCode}...`);\n        const response = await fetch(\"https://libretranslate.de/translate\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                q: text,\n                source: \"en\",\n                target: targetCode,\n                format: \"text\"\n            }),\n            timeout: 15000 // 15 second timeout\n        });\n        if (response.ok) {\n            const data = await response.json();\n            console.log(\"LibreTranslate response:\", data);\n            if (data.translatedText && data.translatedText.trim()) {\n                const translatedText = data.translatedText.trim();\n                // Check if the translation is meaningful (not just returning the original text)\n                if (translatedText.toLowerCase() !== text.toLowerCase()) {\n                    return {\n                        success: true,\n                        translatedText,\n                        provider: \"LibreTranslate\"\n                    };\n                }\n            }\n        }\n        throw new Error(`LibreTranslate API error: ${response.status} ${response.statusText}`);\n    } catch (error) {\n        console.log(\"LibreTranslate translation failed:\", error);\n        return {\n            success: false,\n            translatedText: text,\n            provider: \"LibreTranslate\",\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n}\n// MyMemory Translation API (free)\nasync function tryMyMemoryTranslate(text, targetLanguage) {\n    try {\n        const languageMap = {\n            \"Chinese\": \"zh-CN\",\n            \"Spanish\": \"es\",\n            \"French\": \"fr\",\n            \"German\": \"de\",\n            \"Italian\": \"it\",\n            \"Portuguese\": \"pt\",\n            \"Japanese\": \"ja\",\n            \"Korean\": \"ko\",\n            \"Russian\": \"ru\",\n            \"Arabic\": \"ar\"\n        };\n        const targetCode = languageMap[targetLanguage] || targetLanguage.toLowerCase();\n        const url = `https://api.mymemory.translated.net/get?q=${encodeURIComponent(text)}&langpair=en|${targetCode}`;\n        console.log(`Trying MyMemory translation to ${targetCode}...`);\n        const response = await fetch(url, {\n            timeout: 10000 // 10 second timeout\n        });\n        if (response.ok) {\n            const data = await response.json();\n            console.log(\"MyMemory response:\", data);\n            if (data.responseStatus === 200 && data.responseData && data.responseData.translatedText) {\n                const translatedText = data.responseData.translatedText.trim();\n                // Check if the translation is meaningful (not just returning the original text)\n                if (translatedText && translatedText.toLowerCase() !== text.toLowerCase()) {\n                    return {\n                        success: true,\n                        translatedText,\n                        provider: \"MyMemory\"\n                    };\n                }\n            }\n        }\n        throw new Error(`MyMemory API error: ${response.status} ${response.statusText}`);\n    } catch (error) {\n        console.log(\"MyMemory translation failed:\", error);\n        return {\n            success: false,\n            translatedText: text,\n            provider: \"MyMemory\",\n            error: error instanceof Error ? error.message : \"Unknown error\"\n        };\n    }\n}\n// Main translation function with fallbacks\nasync function translateText(text, targetLanguage) {\n    if (!text || !text.trim()) {\n        throw new Error(\"Text is required for translation.\");\n    }\n    if (!targetLanguage || !targetLanguage.trim()) {\n        throw new Error(\"Target language is required for translation.\");\n    }\n    // Clean the input text - remove any existing translation prefixes to prevent duplication\n    let cleanText = text.trim();\n    const prefixPattern = /^\\[.*?\\s+translation\\]:\\s*/i;\n    if (prefixPattern.test(cleanText)) {\n        cleanText = cleanText.replace(prefixPattern, \"\").trim();\n        console.log(`Removed existing translation prefix. Clean text: ${cleanText}`);\n    }\n    // Step 1: Try dictionary translation for simple phrases\n    const dictionaryResult = tryDictionaryTranslation(cleanText, targetLanguage);\n    if (dictionaryResult) {\n        console.log(`Dictionary translation successful: ${cleanText} -> ${dictionaryResult}`);\n        return dictionaryResult;\n    }\n    // Step 2: Try free online translation services\n    console.log(`Attempting online translation: ${cleanText} to ${targetLanguage}`);\n    // Try MyMemory first (usually faster)\n    const myMemoryResult = await tryMyMemoryTranslate(cleanText, targetLanguage);\n    if (myMemoryResult.success) {\n        console.log(`MyMemory translation successful: ${myMemoryResult.translatedText}`);\n        return myMemoryResult.translatedText;\n    }\n    // Try LibreTranslate as backup\n    const libreResult = await tryLibreTranslate(cleanText, targetLanguage);\n    if (libreResult.success) {\n        console.log(`LibreTranslate translation successful: ${libreResult.translatedText}`);\n        return libreResult.translatedText;\n    }\n    // Step 3: Final fallback - provide error message instead of broken prefix\n    console.log(`All translation methods failed. Translation services may be unavailable.`);\n    throw new Error(`Translation services are currently unavailable. Please try again later or check your internet connection.`);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./src/lib/translationService.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fgenai%2Ftranslate%2Froute&page=%2Fapi%2Fgenai%2Ftranslate%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fgenai%2Ftranslate%2Froute.ts&appDir=%2Fworkspaces%2F24005826G_lab2_V2%2Fsrc%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2Fworkspaces%2F24005826G_lab2_V2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();